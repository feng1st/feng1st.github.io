<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nim Language on Code One</title>
    <link>http://codeone.io/nim-lang/</link>
    <description>Recent content in Nim Language on Code One</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 10 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://codeone.io/nim-lang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Nim4LeetCode] 4. Median of Two Sorted Arrays</title>
      <link>http://codeone.io/nim-lang/leetcode/0004-median-of-two-sorted-arrays/</link>
      <pubDate>Sat, 10 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://codeone.io/nim-lang/leetcode/0004-median-of-two-sorted-arrays/</guid>
      <description>Problem There are two sorted arrays nums1 and nums2 of size m and n respectively.
Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).
Example 1:
nums1 = [1, 3] nums2 = [2] The median is 2.0  Example 2:
nums1 = [1, 2] nums2 = [3, 4] The median is (2 + 3)/2 = 2.5  Solution proc findMedianSortedArrays(nums1: seq[int], nums2: seq[int]): float = var A = nums1 B = nums2 m = A.</description>
    </item>
    
    <item>
      <title>[Nim4LeetCode] 3. Longest Substring Without Repeating Characters</title>
      <link>http://codeone.io/nim-lang/leetcode/0003-longest-substring-without-repeating-characters/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://codeone.io/nim-lang/leetcode/0003-longest-substring-without-repeating-characters/</guid>
      <description>Problem Given a string, find the length of the longest substring without repeating characters.
Examples:
Given &amp;quot;abcabcbb&amp;quot;, the answer is &amp;quot;abc&amp;quot;, which the length is 3.
Given &amp;quot;bbbbb&amp;quot;, the answer is &amp;quot;b&amp;quot;, with the length of 1.
Given &amp;quot;pwwkew&amp;quot;, the answer is &amp;quot;wke&amp;quot;, with the length of 3. Note that the answer must be a substring, &amp;quot;pwke&amp;quot; is a subsequence and not a substring.
Solution import tables proc lengthOfLongestSubstring(s: string): int = var map = initTable[char, int]() n: int = 0 for i in 0.</description>
    </item>
    
    <item>
      <title>[Nim4LeetCode] 2. Add Two Numbers</title>
      <link>http://codeone.io/nim-lang/leetcode/0002-add-two-numbers/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://codeone.io/nim-lang/leetcode/0002-add-two-numbers/</guid>
      <description>Problem You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.
You may assume the two numbers do not contain any leading zero, except the number 0 itself.
Example
Input: (2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt; 4) Output: 7 -&amp;gt; 0 -&amp;gt; 8 Explanation: 342 + 465 = 807.</description>
    </item>
    
    <item>
      <title>[Nim4LeetCode] 1. Two Sum</title>
      <link>http://codeone.io/nim-lang/leetcode/0001-two-sum/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://codeone.io/nim-lang/leetcode/0001-two-sum/</guid>
      <description>Problem Given an array of integers, return indices of the two numbers such that they add up to a specific target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
Example:
Given nums = [2, 7, 11, 15], target = 9, Because nums[0] + nums[1] = 2 + 7 = 9, return [0, 1].  Solution import tables proc twoSum(nums: seq[int], target: int): (int, int) = var idxMap = initTable[int, int]() for i in 0.</description>
    </item>
    
  </channel>
</rss>