<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dispatcherservlet on 技术随笔</title>
    <link>http://codeone.io/tags/dispatcherservlet/</link>
    <description>Recent content in Dispatcherservlet on 技术随笔</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 25 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://codeone.io/tags/dispatcherservlet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring DispatcherServlet相关知识点</title>
      <link>http://codeone.io/post/2017/06/spring-dispatcher-servlet/</link>
      <pubDate>Sun, 25 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://codeone.io/post/2017/06/spring-dispatcher-servlet/</guid>
      <description>DispatcherServlet作用  作为Spring MVC的集中访问点
 通过HandlerMapping，将请求映射到Handler
 返回一个HandlerExecutionChain，包含一个HandlerAdaptor和多个HandlerInterceptor
  通过不同的HandlerAdaptor，支持不同的处理器
 通过ViewResolver，支持到具体视图的解析
 通过HandlerExceptionResolver，实现对异常的处理
  每一部分都可以很方便的扩展
DispatcherServlet流程  请求被DispatcherServlet截获
 DispatcherServlet在候选handlerMappings里面，找到第一个能够处理request的handlerMapping
 常见的handlerMapping：
 RequestMappingHandlerMapping: 通过@RequestMapping注解的Controller的方法
 内部有一个url到HandlerMethod的映射，通过这个映射来判断是否能处理
  BeanNameUrlHandlerMapping: 通过web.xml配置的，从URL映射到bean。DispatcherServlet本身就是通过这种方式配置
   handlerMapping构造一个HandlerExecutionChain
 HandlerExecutionChain包含多个HandlerInterceptor和一个Handler
 Handler是一个HandlerMethod，通过构造函数参数传入request
 Spring MVC默认会注入一个ConversionServiceExposingInterceptor，用来处理日期、时间等格式转换
   用HandlerAdaptor封装chain里的handler
 不同的handler接口不同，通过adaptor统一接口
 DispatcherServlet有一个HandlerAdaptor的列表，采用第一个.supports(handler)的HandlerAdaptor
 HandlerMethod对应的是RequestMappingHandlerAdaptor
  依次执行各interceptor的preHandle，handlerAdaptor的handle和各interceptor的postHandle
 HandlerAdaptor内部实例化一个ServletInvocableHandlerMethod
 除了handler，还注入了HandlerMethodArgumentResolver列表、HandlerMethodReturnValueHandler列表以及DataBinderFactory
  ServletInvocableHandlerMethod.invokeAndHandle()里
 用argumentResolvers和dataBinderFactory转化参数
 用argumentResolvers解析参数</description>
    </item>
    
  </channel>
</rss>