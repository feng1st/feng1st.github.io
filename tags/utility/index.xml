<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>utility on 知耻而后勇，知不足而后进</title>
    <link>https://feng1st.github.io/tags/utility/index.xml</link>
    <description>Recent content in utility on 知耻而后勇，知不足而后进</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>utf-8</language>
    <copyright>nf_xp</copyright>
    <atom:link href="https://feng1st.github.io/tags/utility/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>工具推荐：PlantUML，文本转UML图工具</title>
      <link>https://feng1st.github.io/post/2017-06-22-plantuml/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://feng1st.github.io/post/2017-06-22-plantuml/</guid>
      <description>

&lt;p&gt;官网：&lt;a href=&#34;http://plantuml.com/&#34;&gt;http://plantuml.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;为什么要用文本生成UML，而不直接画UML？&lt;br /&gt;
这就好像问为什么要用markdown，而不直接使用.odt或者.docx格式。答案一样：&lt;br /&gt;
这属于强迫症，得治。&lt;/p&gt;

&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;

&lt;p&gt;如果使用ubuntu，直接：&lt;br /&gt;
&lt;code&gt;sudo apt-get install graphviz plantuml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;其它平台或者安装方法请参考官网&lt;/p&gt;

&lt;h2 id=&#34;使用&#34;&gt;使用&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;plantuml src.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果是下载的jar：&lt;br /&gt;
&lt;code&gt;java -jar plantuml.jar src.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;会在当前目录下生成&lt;code&gt;src.png&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;示例&#34;&gt;示例&lt;/h2&gt;

&lt;p&gt;输入：&lt;br /&gt;
&lt;code&gt;jetty-handler.pu&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@startuml
interface Handler {
  +handle(request)
}
abstract class AbstractHandler
class HandlerWrapper
class ServletHandler
class HandlerContainer
class Server
class SessionHandler {
  +SessionManager
}
class SecurityHandler {
  +SecurityConstraint[]
}
class ContextHandler {
  +contextPath
  +resourceBase
  +classLoader
}
class ContextHandlerContainer {
  -contexts: PathMap
}
class WebAppContext {
  +descriptor
}

Handler &amp;lt;|.. AbstractHandler
Handler &amp;quot;1&amp;quot; --o HandlerWrapper
Handler &amp;quot;*&amp;quot; --o HandlerContainer
AbstractHandler &amp;lt;|-- HandlerWrapper
AbstractHandler &amp;lt;|-- ServletHandler
AbstractHandler &amp;lt;|-- HandlerContainer
AbstractHandler ..&amp;gt; Server
HandlerWrapper &amp;lt;|-- Server
HandlerWrapper &amp;lt;|-- SessionHandler
HandlerWrapper &amp;lt;|-- SecurityHandler
HandlerWrapper &amp;lt;|-- ContextHandler
ServletHandler &amp;lt;.. WebAppContext
HandlerContainer &amp;lt;|-- ContextHandlerContainer
SessionHandler &amp;lt;.. WebAppContext
SecurityHandler &amp;lt;.. WebAppContext
ContextHandler &amp;lt;. ContextHandlerContainer
ContextHandler &amp;lt;|-- WebAppContext
@enduml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出：&lt;br /&gt;
&lt;code&gt;jetty-handler.png&lt;/code&gt;&lt;br /&gt;

&lt;figure &gt;
    &lt;a href=&#34;jetty-handler.png&#34;&gt;
        &lt;img src=&#34;jetty-handler.png&#34; /&gt;
    &lt;/a&gt;
    
&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>